{
	"info": {
		"_postman_id": "724ff129-5061-41a5-a078-f18bdb8008b1",
		"name": "ATHMMS-Personal-Activity-Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Validate Headers Response",
			"item": [
				{
					"name": "01 - Personal Activity",
					"item": [
						{
							"name": "personal-activity/health",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Validate responde code\", function(){\r",
											"    pm.response.to.have.status(200).and.to.have.status(\"OK\");  \r",
											"});\r",
											"\r",
											"pm.test(\"Validate status\", function(){\r",
											"    pm.expect(\"success\").to.eql(jsonData.status);\r",
											"});\r",
											"\r",
											"pm.test(\"Validate status data\", function(){\r",
											"    pm.expect(\"Service is Alive!\").to.eql(jsonData.data.status);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"host": true
								}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwttoken2}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "{{Host}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Server-ip}}{{Server-port}}{{personal-activity-endpoint}}/health",
									"host": [
										"{{Server-ip}}{{Server-port}}{{personal-activity-endpoint}}"
									],
									"path": [
										"health"
									]
								},
								"description": "Health Check Controller"
							},
							"response": []
						},
						{
							"name": "personal-activity/healthf5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var headerContentType = pm.response.headers.get(\"Content-Type\");\r",
											"var  jsonData = pm.response.text();\r",
											"\r",
											"pm.test(\"Validate responde code\", function(){\r",
											"    pm.response.to.have.status(200).and.to.have.status(\"OK\");  \r",
											"});\r",
											"\r",
											"    pm.test(\"Validate service is Alive\", function(){\r",
											"    pm.expect(\"Service is Alive!\").to.eql(jsonData);\r",
											"});\r",
											"\r",
											"  pm.test(\"Validate textplain\", function(){\r",
											"    pm.expect(\"text/plain;charset=UTF-8\").to.eql(headerContentType);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "{{Host}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Server-ip}}{{Server-port}}{{personal-activity-endpoint}}/healthf5",
									"host": [
										"{{Server-ip}}{{Server-port}}{{personal-activity-endpoint}}"
									],
									"path": [
										"healthf5"
									]
								},
								"description": "Health Check Controller"
							},
							"response": []
						}
					],
					"description": "This archive contains health controllers to validate health check and f5 health check for the personal transactions service.\r\n\r\nValidations for this tests includes:\r\n1. Body includes \"is Alive!\" string.\r\n2. Response time is less than 200ms.\r\n3. Content-type on header is present.\r\n4. Status code is 200. \r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set(\"ContentSecurityPolicy\", \"default-src 'self' athmovil.com *.athmovil.com\");",
							"pm.collectionVariables.set(\"StrictTransportSecurity\", \"max-age=31536000; includeSubDomains\");",
							"pm.collectionVariables.set(\"XContentTypeOptions\",\"nosniff\");",
							"pm.collectionVariables.set(\"XFrameOptions\", \"DENY\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Validate Headers Response\", function () {",
							"var xContent = pm.response.headers.get(\"X-Content-Type-Options\");",
							"var contentSecurity = pm.response.headers.get(\"Content-Security-Policy\");",
							"var strictTransport = pm.response.headers.get(\"Strict-Transport-Security\");",
							"var xFrame = pm.response.headers.get(\"X-Frame-Options\");",
							"",
							"    pm.expect(pm.collectionVariables.get(\"ContentSecurityPolicy\")).to.eql(contentSecurity);",
							"    pm.expect(pm.collectionVariables.get(\"StrictTransportSecurity\")).to.eql(strictTransport);",
							"    pm.expect(pm.collectionVariables.get(\"XContentTypeOptions\")).to.eql(xContent);",
							"    pm.expect(pm.collectionVariables.get(\"XFrameOptions\")).to.eql(xFrame);",
							"});"
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "ContentSecurityPolicy",
			"value": ""
		},
		{
			"key": "StrictTransportSecurity",
			"value": ""
		},
		{
			"key": "XContentTypeOptions",
			"value": ""
		},
		{
			"key": "XFrameOptions",
			"value": ""
		}
	]
}